{"version":3,"file":"static/js/723.7d2dba37.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACTF,EAAAA,EAAAA,IAAA,sCAAyCC,IADhC,cACrBE,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,qDAKbC,EAAW,mCAAG,WAAMC,GAAN,uFACPN,EAAAA,EAAAA,IAAA,iCACUC,EADV,iCAC0CK,EAD1C,gCADO,cACnBH,EADmB,yBAIlBA,EAAIC,MAJc,2CAAH,sDAOXG,EAAe,mCAAG,WAAMC,GAAN,uFACXR,EAAAA,EAAAA,IAAA,kBACLQ,EADK,oBACSP,EADT,oBADW,cACvBE,EADuB,yBAItBA,EAAIC,MAJkB,2CAAH,sDAOfK,EAAe,mCAAG,WAAMD,GAAN,uFACXR,EAAAA,EAAAA,IAAA,kBACLQ,EADK,4BACiBP,EADjB,oBADW,cACvBE,EADuB,yBAItBA,EAAIC,MAJkB,2CAAH,sDAOfM,EAAe,mCAAG,WAAMF,GAAN,uFACXR,EAAAA,EAAAA,IAAA,kBACLQ,EADK,4BACiBP,EADjB,2BADW,cACvBE,EADuB,yBAItBA,EAAIC,MAJkB,2CAAH,qD,sKC7BfO,EAAWC,EAAAA,GAAAA,GAAH,mFAKRC,EAAWD,EAAAA,GAAAA,GAAH,uEAIRE,EAAUF,EAAAA,GAAAA,IAAH,2D,SCiCpB,EAvCa,WACX,IAAQJ,GAAOO,EAAAA,EAAAA,MAAPP,GACR,GAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MACAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE2BV,EAAAA,EAAAA,IAAgBD,GAF3C,gBAEYS,EAFZ,EAEYA,KACRC,EAAQD,GAHZ,gDAKIG,QAAQC,IAAI,8BALhB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACd,IAEJ,OACE,SAACG,EAAD,UACGM,EAAKM,KAAI,YAAiC,IAA9Bf,EAA6B,EAA7BA,GAAIgB,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACrB,OACE,UAACZ,EAAD,YACE,SAACC,EAAD,CACEY,IACED,EAAY,UART,oCAQS,OACMA,GACd,oCAENE,IAAI,kBAEN,0BACE,iCADF,KACe,kBACZH,OAXUhB,EAelB,KAGN,C","sources":["api.js","components/Cast/CastStyled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '1222ad49372cbb365a0e9b84c00590f8';\n\nexport const getTrendMovie = async () => {\n  const res = await axios.get(`/3/trending/all/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovie = async query => {\n  const res = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return res.data;\n};\n\nexport const getMovieDetails = async id => {\n  const res = await axios.get(\n    `3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const getMovieCredits = async id => {\n  const res = await axios.get(\n    `3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(\n    `3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n`;\nexport const CastItem = styled.li`\n  margin-right: 15px;\n  margin-bottom: 10px;\n`;\nexport const CastImg = styled.img`\n  width: 150px;\n  height: 200px;\n`;\n","import { getMovieCredits } from 'api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastList, CastImg, CastItem } from './CastStyled';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    async function getCast() {\n      try {\n        const { cast } = await getMovieCredits(id);\n        setCast(cast);\n      } catch (error) {\n        console.log('Oopps,something went wrong');\n      }\n    }\n    getCast();\n  }, [id]);\n  const BASE_IMG = 'https://image.tmdb.org/t/p/w200/';\n  return (\n    <CastList>\n      {cast.map(({ id, name, profile_path }) => {\n        return (\n          <CastItem key={id}>\n            <CastImg\n              src={\n                profile_path\n                  ? `${BASE_IMG}${profile_path}`\n                  : 'https://i.imgur.com/st2SrKk_d.jpg'\n              }\n              alt=\"Actor`s name\"\n            />\n            <p>\n              <b>Name:</b> <br />\n              {name}\n            </p>\n          </CastItem>\n        );\n      })}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","getTrendMovie","res","data","searchMovie","query","getMovieDetails","id","getMovieCredits","getMovieReviews","CastList","styled","CastItem","CastImg","useParams","useState","cast","setCast","useEffect","console","log","getCast","map","name","profile_path","src","alt"],"sourceRoot":""}