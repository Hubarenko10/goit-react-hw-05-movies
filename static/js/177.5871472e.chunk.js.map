{"version":3,"file":"static/js/177.5871472e.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACTF,EAAAA,EAAAA,IAAA,sCAAyCC,IADhC,cACrBE,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,qDAKbC,EAAW,mCAAG,WAAMC,GAAN,uFACPN,EAAAA,EAAAA,IAAA,iCACUC,EADV,iCAC0CK,EAD1C,gCADO,cACnBH,EADmB,yBAIlBA,EAAIC,MAJc,2CAAH,sDAOXG,EAAe,mCAAG,WAAMC,GAAN,uFACXR,EAAAA,EAAAA,IAAA,kBACLQ,EADK,oBACSP,EADT,oBADW,cACvBE,EADuB,yBAItBA,EAAIC,MAJkB,2CAAH,sDAOfK,EAAe,mCAAG,WAAMD,GAAN,uFACXR,EAAAA,EAAAA,IAAA,kBACLQ,EADK,4BACiBP,EADjB,oBADW,cACvBE,EADuB,yBAItBA,EAAIC,MAJkB,2CAAH,sDAOfM,EAAe,mCAAG,WAAMF,GAAN,uFACXR,EAAAA,EAAAA,IAAA,kBACLQ,EADK,4BACiBP,EADjB,2BADW,cACvBE,EADuB,yBAItBA,EAAIC,MAJkB,2CAAH,qD,wLC5BfO,EAAMC,EAAAA,GAAAA,IAAH,0CAIHC,EAAUD,EAAAA,GAAAA,IAAH,8CAIPE,EAAOF,EAAAA,GAAAA,KAAH,wHAOJG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,iP,UCfRK,EAAQL,EAAAA,GAAAA,GAAH,gDAILM,GAAON,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,6OAWJO,GAASP,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,sN,SCfNQ,EAAiB,WAC5B,OACE,iCACE,SAACH,EAAD,+BACA,SAACC,EAAD,CAAMG,GAAG,OAAT,qBACA,SAACF,EAAD,CAAQE,GAAG,SAAX,sBAGL,E,UCuDD,EAxDqB,WAAO,IAAD,IACjBb,GAAOc,EAAAA,EAAAA,MAAPd,GACR,GAA0Be,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAC7CC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyBvB,EAAAA,EAAAA,IAAgBC,GAFzC,OAEUuB,EAFV,OAGIN,EAASM,GAHb,gDAKIC,QAAQC,IAAI,+BALhB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAAC1B,IACJ,IACQ2B,EAAuDX,EAAvDW,MAAOC,EAAgDZ,EAAhDY,YAAaC,EAAmCb,EAAnCa,aAAcC,EAAqBd,EAArBc,SAAUC,EAAWf,EAAXe,OAC9CC,EAAWC,KAAKC,MAAqB,GAAfL,GAC5B,OACE,4BACE,UAACtB,EAAD,CAAUM,GAAIK,EAAd,WACE,SAAC,MAAD,CAAaiB,KAAK,OADpB,oBAIA,UAAChC,EAAD,YACE,gBACEiC,IAAKR,EAAW,UAXR,oCAWQ,OAAgBA,GAAgB,kBAChDS,IAAI,kBAEN,UAAChC,EAAD,YACE,wBAAKsB,KACL,0BACE,uCADF,IACsBK,EADtB,QAGA,sCACA,uBAAIF,KACJ,oCACA,uBACGC,GACCA,EAAOO,KAAI,SAAAC,GAAK,OACd,UAACjC,EAAD,YACE,SAAC,MAAD,CAAakC,MAAM,QADrB,IAC+BD,EAAME,KAAM,MADhCF,EAAMvC,GADH,aASxB,SAACY,EAAD,KAEA,SAAC,KAAD,MAGL,C","sources":["api.js","pages/MovieDetails/MovieDetailsStyled.js","components/AddInfo/AddInfoStyled.js","components/AddInfo/AddInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '1222ad49372cbb365a0e9b84c00590f8';\n\nexport const getTrendMovie = async () => {\n  const res = await axios.get(`/3/trending/all/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovie = async query => {\n  const res = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return res.data;\n};\n\nexport const getMovieDetails = async id => {\n  const res = await axios.get(\n    `3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const getMovieCredits = async id => {\n  const res = await axios.get(\n    `3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(\n    `3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Box = styled.div`\n  display: flex;\n`;\n\nexport const BoxInfo = styled.div`\n  margin-left: 25px;\n`;\n\nexport const Type = styled.span`\n  display: flex;\n  align-items: center;\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n  :hover {\n    color: purple;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-bottom: 10px;\n`;\n\nexport const Cast = styled(Link)`\n  text-decoration: none;\n  color: black;\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n  font-size: 20px;\n  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n  margin-right: 15px;\n`;\nexport const Review = styled(Link)`\n  text-decoration: none;\n  color: black;\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n  font-size: 20px;\n  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n`;\n","import { Cast, Title, Review } from './AddInfoStyled';\n;\n\nexport const AdditionalInfo = () => {\n  return (\n    <>\n      <Title>Additional Info</Title>\n      <Cast to=\"cast\"> Cast </Cast>\n      <Review to=\"review\">Review</Review>\n    </>\n  );\n};\n","import { getMovieDetails } from 'api';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Box, BoxInfo, Type, BackLink } from './MovieDetailsStyled';\nimport { RxDotFilled } from 'react-icons/rx';\nimport { Outlet } from 'react-router-dom';\nimport { AdditionalInfo } from 'components/AddInfo/AddInfo';\nimport { HiArrowLeft } from 'react-icons/hi';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        const result = await getMovieDetails(id);\n        setMovie(result);\n      } catch (error) {\n        console.log('Oops! Something went wrong!');\n      }\n    }\n    getMovie();\n  }, [id]);\n  const IMG_URL = 'https://image.tmdb.org/t/p/w300/';\n  const { title, poster_path, vote_average, overview, genres } = movie;\n  const userStat = Math.round(vote_average * 10);\n  return (\n    <div>\n      <BackLink to={backLinkHref}>\n        <HiArrowLeft size=\"24\" />\n        Back to films\n      </BackLink>\n      <Box>\n        <img\n          src={poster_path ? `${IMG_URL}${poster_path}` : 'Sorry,no poster'}\n          alt=\"Movie poster\"\n        />\n        <BoxInfo>\n          <h2>{title}</h2>\n          <p>\n            <b>User score:</b> {userStat}%\n          </p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {genres &&\n              genres.map(genre => (\n                <Type key={genre.id}>\n                  <RxDotFilled color=\"red\" /> {genre.name}{' '}\n                </Type>\n              ))}\n          </p>\n        </BoxInfo>\n      </Box>\n\n      <AdditionalInfo />\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","getTrendMovie","res","data","searchMovie","query","getMovieDetails","id","getMovieCredits","getMovieReviews","Box","styled","BoxInfo","Type","BackLink","Link","Title","Cast","Review","AdditionalInfo","to","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","result","console","log","getMovie","title","poster_path","vote_average","overview","genres","userStat","Math","round","size","src","alt","map","genre","color","name"],"sourceRoot":""}