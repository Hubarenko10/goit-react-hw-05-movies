{"version":3,"file":"static/js/597.77647e00.chunk.js","mappings":"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","sources":["api.js","components/MoviesList/MovieListStyled.js","components/MoviesList/MovieList.jsx","components/Search/SearchStyle.js","components/Search/Search.jsx","pages/Movie/Movie.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '1222ad49372cbb365a0e9b84c00590f8';\n\nexport const getTrendMovie = async () => {\n  const res = await axios.get(`/3/trending/all/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovie = async query => {\n  const res = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return res.data;\n};\n\nexport const getMovieDetails = async id => {\n  const res = await axios.get(\n    `3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const getMovieCredits = async id => {\n  const res = await axios.get(\n    `3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(\n    `3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 25px;\n`;\nexport const Item = styled.li`\n  display: block;\n`;\nexport const Img = styled.img`\n  margin-bottom: 5px;\n  transition: background 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  border-radius: 5px;\n  &:hover,\n  &:focus {\n    background: #c4c4c4;\n    box-shadow: 0px 8px 43px rgba(255, 107, 1, 0.6);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #000000;\n  font-weight: 500;\n`;\n\nexport const Title = styled.h3`\n  &:hover {\n    color: orange;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Container, Img, StyledLink, Item, Title } from './MovieListStyled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const URL = `https://image.tmdb.org/t/p/w500/`;\n  return (\n    <Container>\n      {movies.map(({ id, title, name, poster_path }) => {\n        return (\n          <StyledLink to={`/movies/${id}`} key={id} state={{ from: location }}>\n            <Item>\n              <Img\n                src={poster_path ? `${URL}${poster_path}` : 'Sorry,coming soon'}\n                alt=\"\"\n              />\n              <Title>{title || name}</Title>\n            </Item>\n          </StyledLink>\n        );\n      })}\n    </Container>\n  );\n};\nMovieList.propTypes = {\nmovies: PropTypes.array.isRequired\n}","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  width: 40px;\n  height: 36px;\n  border: 1px solid purple;\n  background: purple;\n  text-align: center;\n  color: #fff;\n  border-radius: 0 5px 5px 0;\n  cursor: pointer;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  border: 3px solid purple;\n  border-right: none;\n  padding: 5px;\n  height: 20px;\n  border-radius: 5px 0 0 5px;\n  outline: none;\n  color: grey;\n  &:focus {\n    color: purple;\n  }\n`;\n\nexport const Form = styled.form`\n  width: 50%;\n  display: flex;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { Form, Input, Btn } from './SearchStyle';\nimport { FiSearch } from 'react-icons/fi';\nimport { useState } from 'react';\n\nexport const Search = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = e => setQuery(e.target.value.toLowerCase());\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      console.error('Am empty field,input something');\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search films...\"\n        value={query}\n        onChange={handleQueryChange}\n      />\n      <Btn type=\"submit\">\n        <span>\n          <FiSearch />\n        </span>\n      </Btn>\n    </Form>\n  );\n};\nSearch.propTypes = {\n onSubmit: PropTypes.func.isRequired\n}","import { searchMovie } from 'api';\nimport { MovieList } from 'components/MoviesList/MovieList';\nimport { Search } from 'components/Search/Search';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchFilm, setSearchFilm] = useState('');\n  const query = searchParams.get('query');\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function getFilm() {\n      try {\n        const { results } = await searchMovie(query);\n        results.length > 0 && setSearchFilm(results);\n      } catch (error) {\n        console.log('Ooops,something went wrong');\n      }\n    }\n    getFilm();\n  }, [query]);\n\n  const changeSubmit = query => {\n    setSearchParams({ query: query });\n  };\n  return (\n    <>\n      <Search onSubmit={changeSubmit} />\n      {searchFilm && <MovieList movies={searchFilm} />}\n    </>\n  );\n};\n\nexport default Movie;\n"],"names":["axios","API_KEY","getTrendMovie","res","data","searchMovie","query","getMovieDetails","id","getMovieCredits","getMovieReviews","Container","styled","Item","Img","StyledLink","Link","Title","MovieList","movies","location","useLocation","map","title","name","poster_path","to","state","from","src","alt","Btn","Input","Form","Search","onSubmit","useState","setQuery","e","preventDefault","trim","console","error","type","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","searchFilm","setSearchFilm","get","useEffect","results","length","log","getFilm"],"sourceRoot":""}